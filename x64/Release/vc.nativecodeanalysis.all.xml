<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>d:\audiobeatgenerator\src</FILEPATH>
      <FILENAME>audiobeatmain.cpp</FILENAME>
      <LINE>136</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26444</DEFECTCODE>
    <DESCRIPTION>Avoid unnamed objects with custom construction and destruction (es.84).</DESCRIPTION>
    <FUNCTION>main</FUNCTION>
    <DECORATED>main</DECORATED>
    <FUNCLINE>126</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>d:\audiobeatgenerator\src\include</FILEPATH>
      <FILENAME>audiofile.h</FILENAME>
      <LINE>578</LINE>
      <COLUMN>52</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AudioFile&lt;double&gt;::decodeWaveFile</FUNCTION>
    <DECORATED>?decodeWaveFile@?$AudioFile@N@@AEAA_NAEAV?$vector@EV?$allocator@E@std@@@std@@@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>d:\audiobeatgenerator\src\include</FILEPATH>
      <FILENAME>audiofile.h</FILENAME>
      <LINE>578</LINE>
      <COLUMN>88</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AudioFile&lt;double&gt;::decodeWaveFile</FUNCTION>
    <DECORATED>?decodeWaveFile@?$AudioFile@N@@AEAA_NAEAV?$vector@EV?$allocator@E@std@@@std@@@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>d:\audiobeatgenerator\src\include</FILEPATH>
      <FILENAME>audiofile.h</FILENAME>
      <LINE>610</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AudioFile&lt;double&gt;::decodeWaveFile</FUNCTION>
    <DECORATED>?decodeWaveFile@?$AudioFile@N@@AEAA_NAEAV?$vector@EV?$allocator@E@std@@@std@@@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>d:\audiobeatgenerator\src\include</FILEPATH>
      <FILENAME>audiofile.h</FILENAME>
      <LINE>717</LINE>
      <COLUMN>84</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AudioFile&lt;double&gt;::decodeAiffFile</FUNCTION>
    <DECORATED>?decodeAiffFile@?$AudioFile@N@@AEAA_NAEAV?$vector@EV?$allocator@E@std@@@std@@@Z</DECORATED>
    <FUNCLINE>618</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>d:\audiobeatgenerator\src\include</FILEPATH>
      <FILENAME>audiofile.h</FILENAME>
      <LINE>717</LINE>
      <COLUMN>118</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AudioFile&lt;double&gt;::decodeAiffFile</FUNCTION>
    <DECORATED>?decodeAiffFile@?$AudioFile@N@@AEAA_NAEAV?$vector@EV?$allocator@E@std@@@std@@@Z</DECORATED>
    <FUNCLINE>618</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>d:\audiobeatgenerator\src\include</FILEPATH>
      <FILENAME>audiofile.h</FILENAME>
      <LINE>749</LINE>
      <COLUMN>73</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AudioFile&lt;double&gt;::decodeAiffFile</FUNCTION>
    <DECORATED>?decodeAiffFile@?$AudioFile@N@@AEAA_NAEAV?$vector@EV?$allocator@E@std@@@std@@@Z</DECORATED>
    <FUNCLINE>618</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>d:\audiobeatgenerator\src\include</FILEPATH>
      <FILENAME>audiofile.h</FILENAME>
      <LINE>1141</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AudioFile&lt;double&gt;::fourBytesToInt</FUNCTION>
    <DECORATED>?fourBytesToInt@?$AudioFile@N@@AEAAHAEAV?$vector@EV?$allocator@E@std@@@std@@HW4Endianness@1@@Z</DECORATED>
    <FUNCLINE>1134</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>d:\audiobeatgenerator\src\include</FILEPATH>
      <FILENAME>audiofile.h</FILENAME>
      <LINE>1141</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AudioFile&lt;double&gt;::fourBytesToInt</FUNCTION>
    <DECORATED>?fourBytesToInt@?$AudioFile@N@@AEAAHAEAV?$vector@EV?$allocator@E@std@@@std@@HW4Endianness@1@@Z</DECORATED>
    <FUNCLINE>1134</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>d:\audiobeatgenerator\src\include</FILEPATH>
      <FILENAME>audiofile.h</FILENAME>
      <LINE>1141</LINE>
      <COLUMN>129</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AudioFile&lt;double&gt;::fourBytesToInt</FUNCTION>
    <DECORATED>?fourBytesToInt@?$AudioFile@N@@AEAAHAEAV?$vector@EV?$allocator@E@std@@@std@@HW4Endianness@1@@Z</DECORATED>
    <FUNCLINE>1134</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>d:\audiobeatgenerator\src\include</FILEPATH>
      <FILENAME>audiofile.h</FILENAME>
      <LINE>1139</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AudioFile&lt;double&gt;::fourBytesToInt</FUNCTION>
    <DECORATED>?fourBytesToInt@?$AudioFile@N@@AEAAHAEAV?$vector@EV?$allocator@E@std@@@std@@HW4Endianness@1@@Z</DECORATED>
    <FUNCLINE>1134</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>d:\audiobeatgenerator\src\include</FILEPATH>
      <FILENAME>audiofile.h</FILENAME>
      <LINE>1139</LINE>
      <COLUMN>69</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AudioFile&lt;double&gt;::fourBytesToInt</FUNCTION>
    <DECORATED>?fourBytesToInt@?$AudioFile@N@@AEAAHAEAV?$vector@EV?$allocator@E@std@@@std@@HW4Endianness@1@@Z</DECORATED>
    <FUNCLINE>1134</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>d:\audiobeatgenerator\src\include</FILEPATH>
      <FILENAME>audiofile.h</FILENAME>
      <LINE>1139</LINE>
      <COLUMN>102</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AudioFile&lt;double&gt;::fourBytesToInt</FUNCTION>
    <DECORATED>?fourBytesToInt@?$AudioFile@N@@AEAAHAEAV?$vector@EV?$allocator@E@std@@@std@@HW4Endianness@1@@Z</DECORATED>
    <FUNCLINE>1134</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>d:\audiobeatgenerator\src\include</FILEPATH>
      <FILENAME>audiofile.h</FILENAME>
      <LINE>1155</LINE>
      <COLUMN>63</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AudioFile&lt;double&gt;::twoBytesToInt</FUNCTION>
    <DECORATED>?twoBytesToInt@?$AudioFile@N@@AEAAFAEAV?$vector@EV?$allocator@E@std@@@std@@HW4Endianness@1@@Z</DECORATED>
    <FUNCLINE>1148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>d:\audiobeatgenerator\src\include</FILEPATH>
      <FILENAME>audiofile.h</FILENAME>
      <LINE>1153</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AudioFile&lt;double&gt;::twoBytesToInt</FUNCTION>
    <DECORATED>?twoBytesToInt@?$AudioFile@N@@AEAAFAEAV?$vector@EV?$allocator@E@std@@@std@@HW4Endianness@1@@Z</DECORATED>
    <FUNCLINE>1148</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>d:\audiobeatgenerator\src\include</FILEPATH>
      <FILENAME>audiofile.h</FILENAME>
      <LINE>774</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AudioFile&lt;double&gt;::tenByteMatch</FUNCTION>
    <DECORATED>?tenByteMatch@?$AudioFile@N@@AEAA_NAEAV?$vector@EV?$allocator@E@std@@@std@@H0H@Z</DECORATED>
    <FUNCLINE>770</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>d:\audiobeatgenerator\src\include</FILEPATH>
      <FILENAME>audiofile.h</FILENAME>
      <LINE>774</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AudioFile&lt;double&gt;::tenByteMatch</FUNCTION>
    <DECORATED>?tenByteMatch@?$AudioFile@N@@AEAA_NAEAV?$vector@EV?$allocator@E@std@@@std@@H0H@Z</DECORATED>
    <FUNCLINE>770</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>